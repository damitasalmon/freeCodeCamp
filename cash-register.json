{"index.js":"function checkCashRegister(price, cash, cid) {\n    //cid is a 2D array listing available currency.\n    const changeDue = parseFloat(cash - price).toFixed(2),\n        currency = {\n            \"PENNY\": .01,\n            \"NICKEL\": .05,\n            \"DIME\": .1,\n            \"QUARTER\": .25,\n            \"ONE\": 1,\n            \"FIVE\": 5,\n            \"TEN\": 10,\n            \"TWENTY\": 20,\n            \"ONE HUNDRED\": 100\n        },\n        totalCID = cid.slice(0).map(function (value, index) {\n            return value[1];\n        }).reduce((a, b) => {\n            return a + b;\n        });\n\n    /*The checkCashRegister() function should always return an object with a status key and a change key.*/\n    let register = {\n        status: '',\n        change: [],\n    }\n\n    function getChange(changeDue, cid) {\n        const change = [],\n\t\t\t\troll = cid.length - 1;\n        for (let i = roll; i >= 0; i--) {\n            const denom = cid[i][0];\n            const monies = cid[i][1];\n            const value = currency[denom];\n            let numCoins = (monies / value).toFixed(2);\n            let newChange = 0;\n\n            while (changeDue >= value && numCoins > 0) {\n                changeDue -= value; //subtract .25 from CID\n                changeDue = changeDue.toFixed(2);\n\t\t\t\t\t\t\t\tnumCoins--; //substract a quarter from the number of coins stored \n                newChange++;\n            }\n            if (newChange > 0) {\n                change.push([denom, newChange * value]);\n\t\t\t\t\t\t\t\tconsole.log(change);\n            }\n        }\n        register.change = change;\n        //console.log(register.change)\n        return register.change;\n    }\n\n\t\tgetChange(changeDue, cid);\n\t\tlet totalCashback = register.change.slice(0).map(function (value, index) {\n            return value[1];\n        }).reduce((a, b) => {\n            return a + b;\n        });\nif (Number(changeDue) > Number(totalCID) || Number(totalCashback) < Number(changeDue)){\n register.status = \"INSUFFICIENT_FUNDS\";\n register.change = [];\n}else if (Number(totalCID) == Number(changeDue)) {\n        register.status = \"CLOSED\";\n        register.change = [...cid];\n    } else if (changeDue < totalCID) {\n        register.status = \"OPEN\";\n\t\t\t\t\tgetChange(changeDue, cid);\n    }\n\n\n    return register;\n}"}